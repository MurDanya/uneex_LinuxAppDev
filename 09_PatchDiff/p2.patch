--- labgen_ver1.c	2024-11-15 15:48:44.882831435 +0300
+++ labgen_ver2.c	2024-11-15 15:49:01.728068614 +0300
@@ -1,16 +1,17 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <stdbool.h>
+#include <string.h>
 
-char* create_template(int lab_size) {
+char* create_template(int lab_size, char* symbols) {
     int board_size = 2 * lab_size + 1;
     char* lab = malloc(board_size * board_size * sizeof(char));
     for (int i = 0; i < board_size; ++i) {
         for (int j = 0; j < board_size; ++j) {
             if ((i & 1) && (j & 1)) {
-                lab[i * board_size + j] = '.';
+                lab[i * board_size + j] = symbols[0];
             } else {
-                lab[i * board_size + j] = '#';
+                lab[i * board_size + j] = symbols[1];
             }
         }
     }
@@ -81,7 +82,7 @@
     }
 }
 
-void generate_path(char* lab, int lab_size) {
+void generate_path(char* lab, int lab_size, char* symbols) {
     int board_size = 2 * lab_size + 1;
     int num_rooms = lab_size + 2;
     bool** is_visit = malloc(num_rooms * sizeof(bool*));
@@ -122,7 +123,7 @@
 
             int offset_x = new_room.x - room.x;
             int offset_y = new_room.y - room.y;
-            lab[(2 * room.x - 1 + offset_x) * board_size + (2 * room.y - 1 + offset_y)] = '.';
+            lab[(2 * room.x - 1 + offset_x) * board_size + (2 * room.y - 1 + offset_y)] = symbols[0];
         }
     }
 
@@ -134,17 +135,22 @@
 }
 
 int main(int argc, char* argv[]) {
-    if (argc != 2) {
-        fprintf(stderr, "Error. Incorrect number of arguments.\nUsage: %s LABIRINT_SIZE\n", argv[0]);
+    if (argc != 3) {
+        fprintf(stderr, "Error. Incorrect number of arguments.\nUsage: %s SYMBOLS_PASSAGES_AND_WALLS LABIRINT_SIZE\n", argv[0]);
         return 1;
     }
-    int lab_size = atoi(argv[1]);
+    char* symbols = argv[1];
+    if (strlen(symbols) != 2) {
+        fprintf(stderr, "Error. Incorrect SYMBOLS_PASSAGES_AND_WALLS.\nUse 2 symbols for passages and walls.\n");
+        return 1;
+    }
+    int lab_size = atoi(argv[2]);
     if (lab_size < 1) {
         fprintf(stderr, "Error. Incorrect LABIRINT_SIZE.\nUse positive size.\n");
         return 1;
     }
-    char* lab = create_template(lab_size);
-    generate_path(lab, lab_size);
+    char* lab = create_template(lab_size, symbols);
+    generate_path(lab, lab_size, symbols);
     print_lab(lab, lab_size);
     free(lab);
     return 0;
